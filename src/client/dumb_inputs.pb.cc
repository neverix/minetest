// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/dumb_inputs.proto

#include "client/dumb_inputs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_client_2fdumb_5finputs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_client_2fdumb_5finputs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyboardEvent;
}  // namespace protobuf_client_2fdumb_5finputs_2eproto
class InputEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputEvent>
      _instance;
} _InputEvent_default_instance_;
class KeyboardEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyboardEvent>
      _instance;
} _KeyboardEvent_default_instance_;
namespace protobuf_client_2fdumb_5finputs_2eproto {
static void InitDefaultsInputEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InputEvent_default_instance_;
    new (ptr) ::InputEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InputEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputEvent}, {
      &protobuf_client_2fdumb_5finputs_2eproto::scc_info_KeyboardEvent.base,}};

static void InitDefaultsKeyboardEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyboardEvent_default_instance_;
    new (ptr) ::KeyboardEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyboardEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyboardEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyboardEvent}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InputEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyboardEvent.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputEvent, keyevents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputEvent, mousedx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputEvent, mousedy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyboardEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyboardEvent, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyboardEvent, eventtype_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::InputEvent)},
  { 8, -1, sizeof(::KeyboardEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_InputEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyboardEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "client/dumb_inputs.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030client/dumb_inputs.proto\"Q\n\nInputEvent"
      "\022!\n\tkeyEvents\030\001 \003(\0132\016.KeyboardEvent\022\017\n\007m"
      "ouseDx\030\002 \001(\021\022\017\n\007mouseDy\030\003 \001(\021\";\n\rKeyboar"
      "dEvent\022\013\n\003key\030\001 \001(\t\022\035\n\teventType\030\002 \001(\0162\n"
      ".EventType*#\n\tEventType\022\t\n\005PRESS\020\000\022\013\n\007RE"
      "LEASE\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client/dumb_inputs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_client_2fdumb_5finputs_2eproto
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  protobuf_client_2fdumb_5finputs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_2fdumb_5finputs_2eproto::file_level_enum_descriptors[0];
}
bool EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void InputEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputEvent::kKeyEventsFieldNumber;
const int InputEvent::kMouseDxFieldNumber;
const int InputEvent::kMouseDyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputEvent::InputEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_client_2fdumb_5finputs_2eproto::scc_info_InputEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InputEvent)
}
InputEvent::InputEvent(const InputEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keyevents_(from.keyevents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mousedx_, &from.mousedx_,
    static_cast<size_t>(reinterpret_cast<char*>(&mousedy_) -
    reinterpret_cast<char*>(&mousedx_)) + sizeof(mousedy_));
  // @@protoc_insertion_point(copy_constructor:InputEvent)
}

void InputEvent::SharedCtor() {
  ::memset(&mousedx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mousedy_) -
      reinterpret_cast<char*>(&mousedx_)) + sizeof(mousedy_));
}

InputEvent::~InputEvent() {
  // @@protoc_insertion_point(destructor:InputEvent)
  SharedDtor();
}

void InputEvent::SharedDtor() {
}

void InputEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputEvent::descriptor() {
  ::protobuf_client_2fdumb_5finputs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2fdumb_5finputs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputEvent& InputEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_client_2fdumb_5finputs_2eproto::scc_info_InputEvent.base);
  return *internal_default_instance();
}


void InputEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:InputEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyevents_.Clear();
  ::memset(&mousedx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mousedy_) -
      reinterpret_cast<char*>(&mousedx_)) + sizeof(mousedy_));
  _internal_metadata_.Clear();
}

bool InputEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InputEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyboardEvent keyEvents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keyevents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 mouseDx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mousedx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 mouseDy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mousedy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InputEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InputEvent)
  return false;
#undef DO_
}

void InputEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InputEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyboardEvent keyEvents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyevents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keyevents(static_cast<int>(i)),
      output);
  }

  // sint32 mouseDx = 2;
  if (this->mousedx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->mousedx(), output);
  }

  // sint32 mouseDy = 3;
  if (this->mousedy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->mousedy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:InputEvent)
}

::google::protobuf::uint8* InputEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InputEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyboardEvent keyEvents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyevents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keyevents(static_cast<int>(i)), deterministic, target);
  }

  // sint32 mouseDx = 2;
  if (this->mousedx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->mousedx(), target);
  }

  // sint32 mouseDy = 3;
  if (this->mousedy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->mousedy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InputEvent)
  return target;
}

size_t InputEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InputEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KeyboardEvent keyEvents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keyevents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keyevents(static_cast<int>(i)));
    }
  }

  // sint32 mouseDx = 2;
  if (this->mousedx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->mousedx());
  }

  // sint32 mouseDy = 3;
  if (this->mousedy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->mousedy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InputEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const InputEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InputEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InputEvent)
    MergeFrom(*source);
  }
}

void InputEvent::MergeFrom(const InputEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InputEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyevents_.MergeFrom(from.keyevents_);
  if (from.mousedx() != 0) {
    set_mousedx(from.mousedx());
  }
  if (from.mousedy() != 0) {
    set_mousedy(from.mousedy());
  }
}

void InputEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputEvent::CopyFrom(const InputEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputEvent::IsInitialized() const {
  return true;
}

void InputEvent::Swap(InputEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputEvent::InternalSwap(InputEvent* other) {
  using std::swap;
  CastToBase(&keyevents_)->InternalSwap(CastToBase(&other->keyevents_));
  swap(mousedx_, other->mousedx_);
  swap(mousedy_, other->mousedy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputEvent::GetMetadata() const {
  protobuf_client_2fdumb_5finputs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2fdumb_5finputs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyboardEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyboardEvent::kKeyFieldNumber;
const int KeyboardEvent::kEventTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyboardEvent::KeyboardEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_client_2fdumb_5finputs_2eproto::scc_info_KeyboardEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyboardEvent)
}
KeyboardEvent::KeyboardEvent(const KeyboardEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  eventtype_ = from.eventtype_;
  // @@protoc_insertion_point(copy_constructor:KeyboardEvent)
}

void KeyboardEvent::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventtype_ = 0;
}

KeyboardEvent::~KeyboardEvent() {
  // @@protoc_insertion_point(destructor:KeyboardEvent)
  SharedDtor();
}

void KeyboardEvent::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyboardEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyboardEvent::descriptor() {
  ::protobuf_client_2fdumb_5finputs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2fdumb_5finputs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyboardEvent& KeyboardEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_client_2fdumb_5finputs_2eproto::scc_info_KeyboardEvent.base);
  return *internal_default_instance();
}


void KeyboardEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyboardEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventtype_ = 0;
  _internal_metadata_.Clear();
}

bool KeyboardEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyboardEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyboardEvent.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .EventType eventType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::EventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyboardEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyboardEvent)
  return false;
#undef DO_
}

void KeyboardEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyboardEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyboardEvent.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .EventType eventType = 2;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->eventtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyboardEvent)
}

::google::protobuf::uint8* KeyboardEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyboardEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyboardEvent.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .EventType eventType = 2;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->eventtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyboardEvent)
  return target;
}

size_t KeyboardEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyboardEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .EventType eventType = 2;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyboardEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyboardEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyboardEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyboardEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyboardEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyboardEvent)
    MergeFrom(*source);
  }
}

void KeyboardEvent::MergeFrom(const KeyboardEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyboardEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
}

void KeyboardEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyboardEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyboardEvent::CopyFrom(const KeyboardEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyboardEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyboardEvent::IsInitialized() const {
  return true;
}

void KeyboardEvent::Swap(KeyboardEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyboardEvent::InternalSwap(KeyboardEvent* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventtype_, other->eventtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyboardEvent::GetMetadata() const {
  protobuf_client_2fdumb_5finputs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2fdumb_5finputs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InputEvent* Arena::CreateMaybeMessage< ::InputEvent >(Arena* arena) {
  return Arena::CreateInternal< ::InputEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyboardEvent* Arena::CreateMaybeMessage< ::KeyboardEvent >(Arena* arena) {
  return Arena::CreateInternal< ::KeyboardEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
